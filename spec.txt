From 2021 CIE 9608 Syllabus page 23.
Additional instruction JGT taken from 9608/32/M/J/16 Q 6c). 
JLT added because why not.

01 LDM     #n          Immediate addressing. Load the number n to ACC
02 LDD     <address>   Direct addressing. Load the contents of the location at the given address to ACC
03 LDI     <address>   Indirect addressing. The address to be used is at the given address. Load the contents of this second address to ACC
04 LDX     <address>   Indexed addressing. Form the address from <address> + the contents of the index register. Copy the contents of this calculated address to ACC
05 LDR     #n          Immediate addressing. Load the number n to IX
06 STO     <address>   Store the contents of ACC at the given address
07 ADD     <address>   Add the contents of the given address to the ACC
08 INC     <register>  Add 1 to the contents of the register (ACC or IX)
09 DEC     <register>  Subtract 1 from the contents of the register (ACC or IX)
10 JMP     <address>   Jump to the given address
11 CMP     <address>   Compare the contents of ACC with the contents of <address>
   CMP     #n          Compare the contents of ACC with number n
12 JPE     <address>   Following a compare instruction, jump to <address> if the compare was True
13 JPN     <address>   Following a compare instruction, jump to <address> if the compare was False
        
14 JGT     <address>   Following a compare instruction, jump to <address> if the content of ACC is greater than the number used in the compare instruction (CMP)
        
15 JLT     <address>   Opposite of JGT.
        
16 IN                  Key in a character and store its ASCII value in ACC
17 OUT                 Output to the screen the character whose ASCII value is stored in ACC
18 END                 Return control to the operating system

Constant Operations (#n) must be 16 bit to fit into memory.
Op structure:
Greatest bit: 1 = value is a constant value, 0 = value is an address.
Next greated 15 bits: Opcode.
The rest are the address or value.

Addresses are 16 bit
Memory blocks/Registers are 32-bit
Memory size is 8192 bits (32 bits * 256)
COMP is a regiter used for CMP comparisions.
    COMP == 1: Identical
    COMP == 0: ACC Less than val
    COMP == 2: ACC Greater than val
COMP at 252, PC at 253, ACC at 254, IX at 255

Memory address 0 jumps to the first instruction.
